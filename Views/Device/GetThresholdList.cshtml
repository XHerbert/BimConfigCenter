
@{
    ViewBag.Title = "获取设备阈值列表";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<SelectListItem> projectId = ViewBag.SelectItems as List<SelectListItem>;
    IDictionary<int, string> projects = ViewBag.Projects as Dictionary<int, string>;
}
<div class="row">&nbsp;</div>
<div class="alert alert-danger">
    <b>* 说明：使用说明请参考【帮助文档】</b>
</div>
<div class="table-box" style="margin: 20px;">
    <div id="toolbar">
        <button id="button" onclick="$.fn.createRowData()" class="btn btn-success">创建阈值配置项</button>
        <span style="color:red;"></span>
    </div>
    <table id="table"></table>
</div>

<div style="display:none" id="myform">
    <form class="form-horizontal center-block" role="form">
        <div class="col-md-12">
            <div class="form-group ">
                <label class="col-md-3 control-label" for="equId" title="EQU_ID">设备</label>
                <div class="col-md-9">
                    <input class="form-control" id="equId" name="equId" type="text" placeholder="请选择设备" required />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="projectId" title="PROJECT_ID">关联项目</label>
                <div class="col-md-9">
                    @Html.DropDownList("projectId", projectId, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="propName" title="PROP_NAME">属性名称</label>
                <div class="col-md-9">
                    <input class="form-control" id="propName" name="propName" type="text" placeholder="请输入属性名称" required />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="propCode" title="PROP_CODE">属性编码</label>
                <div class="col-md-9">
                    <input class="form-control" id="propCode" type="text" name="propCode" placeholder="请输入属性编码" />
                </div>
            </div>

            <div class="form-group ">
                <label class="col-md-3 control-label" for="propType" title="PROP_TYPE">数据类型</label>
                <div class="col-md-9">
                    <select name="propType" id="propType" class="form-control">
                        <option value="1" selected>枚举</option>
                        <option value="2">数字</option>
                        <option value="3">字符</option>
                        <option value="4">布尔</option>
                        <option value="5">附件</option>
                        <option value="6">区间</option>
                    </select>
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="valueSet" title="VALUE_SET">阈值</label>
                <div class="col-md-9">
                    <input class="form-control" id="valueSet" type="text" name="valueSet" placeholder="请输入阈值" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="propUnit" title="PROP_UNIT">单位</label>
                <div class="col-md-9">
                    <input class="form-control" id="propUnit" type="text" name="propUnit" placeholder="请输入单位" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="valueSrc" title="VALUE_SRC">来源</label>
                <div class="col-md-9">
                    <input class="form-control" id="valueSrc" type="text" name="valueSrc" placeholder="请输入单位" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="color" title="COLOR">色值</label>
                <div class="col-md-9">
                    <input class="form-control" id="color" type="text" name="color" placeholder="请选择色值" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="rangeMax" title="RANGE_MAX">区间最大值</label>
                <div class="col-md-9">
                    <input class="form-control" id="rangeMax" type="number" name="rangeMax" placeholder="区间最大值" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="rangeMin" title="RANGE_MIN">区间最小值</label>
                <div class="col-md-9">
                    <input class="form-control" id="rangeMin" type="number" name="rangeMin" placeholder="区间最小值" />
                </div>
            </div>
            <input type="hidden" id="id" name="id" />
        </div>
    </form>
</div>

<link rel="stylesheet" href="~/Content/bootstrap-table.min.css">
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/bootstrap-switch.min.js"></script>
<script src="~/Scripts/bootstrap-table.min.js"></script>
<script src="~/Scripts/bootstrap-table-zh-CN.min.js"></script>
<script src="~/layer/layer.js"></script>
<script src="~/Scripts/hostLib.js"></script>

<script type="text/javascript">
    let _project_list = @Html.Raw(ViewBag.Projects);
    let host = hostAddr.threshold + 'getAllThreshold';
    let $table = $('#table');
    let $button = $('#button');

    //数据 类型格式化
    $.fn.dataTypeFormatter = (value, row, index) => {
        // 1枚举  2数字  3字符串   4布尔   5附件  6区间数字
        switch (value) {
            case 1:
                return '<span width="100%" class="btn btn-small btn-primary">枚举</span>';
            case 2:
                return '<span width="100%" class="btn btn-small btn-success">数字</span>';
            case 3:
                return '<span width="100%" class="btn btn-small btn-warning">字符</span>';
            case 4:
                return '<span class="btn btn-small btn-info">布尔</span>';
            case 5:
                return '<span class="btn btn-small btn-danger">附件</span>';
            case 6:
                return '<span class="btn btn-small btn-default">区间</span>';
            default:
                return 'N/A';
        }
    }

    //操作按钮格式化
    $.fn.buttonFormatter = (value, row, index) => {
        let __content = '<button onclick = "$.fn.updateRowData(' + row['id'] + ')" class="btn btn-warning btn-small">修改</button>';
        return [__content];
    }

    //色值格式化
    $.fn.colorFormatter = (value, row, index) => {
        if (null == value) return;

        return '<span class="btn btn-small" style="color:white;background-color:' + value + '">' + value + '</span>';

    }

    // 下拉列表
    $.fn.dropdownFormat = (value, row, index) => {
        let __projects = _project_list;
        let __item = row['projectId'];
        let __drop = '<select onchange="$.fn.selectChange(this)" class="form-control" id="projectId" name="projectId">';
        __drop += row['sceneId'] === undefined ? '<option selected="selected" value="-1">请选择项目</option>' : '<option value="-1">请选择项目</option>';

        for (let i = 0, len = __projects.length; i < len; i++) {
            let __current = __projects[i];
            if (__item && __item === __current.Id) {
                __drop += '<option selected="selected" value="' + __current.Id + '">' + __current.Name + '</option>';
            } else {
                __drop += '<option value="' + __current.Id + '">' + __current.Name + '</option>';
            }
        }
        __drop += '</select>';
        return __drop;
    }

    //更新阈值配置
    $.fn.updateRowData = (id) => {
        let __row = $table.bootstrapTable('getRowByUniqueId', id);
        $.fn.setForm(__row);
        layer.open({
            type: 1,
            title: "修改阈值配置项",
            skin: 'layui-layer-rim',
            area: ['480px', '650px'],
            content: $('#myform'),
            btn: ['修改', '取消'],
            yes: (index, layero) => {
                let options = {
                    url: hostAddr.threshold + 'updateThreshold',
                    data: JSON.stringify($.fn.getForm()),
                    type: 'PUT',
                    contentType: 'application/json',
                    success: (response) => {
                        layer.close(index);
                        if (response.code === 20000) {
                            layer.msg("更新成功！", { icon: 1 });
                            $table.bootstrapTable('refresh');
                        } else {
                            layer.msg(response.message, { icon: 5 });
                        }
                    }
                };
                $.ajax(options);
            }
        });
    }

    //创建阈值配置
    $.fn.createRowData = () => {
        layer.open({
            type: 1,
            title:"创建阈值配置项",
            skin: 'layui-layer-rim',
            area: ['480px', '650px'],
            content: $('#myform'),
            btn: ['创建', '取消'],
            yes: (index, layero) => {
                let data = $.fn.getForm();
                console.log(JSON.stringify(data));
                let options = {
                    url: hostAddr.threshold + 'createThreshold',
                    data: JSON.stringify(data),
                    type: 'POST',
                    contentType: 'application/json',
                    success: (response) => {
                        layer.close(index);
                        if (response.code === 20000) {
                            layer.msg("创建成功！", { icon: 1 });
                            $table.bootstrapTable('refresh');
                        } else {
                            layer.msg(response.message, { icon: 5 });
                        }
                    }
                };
                $.ajax(options);
            }
        });
    }

    //获取Form表单数据
    $.fn.getForm = () => {
        let obj = {};
        let $form = $('form');
        let array = $form.serializeArray();
        $.each(array, function () {
            if (this.value != null && this.value != undefined && this.value!=="") {
                obj[this.name] = this.value;
            }
        });
        return obj;
    }

    //设置Form表单数据
    $.fn.setForm = (jsonValue) => {
        let obj = $('form');
        $.each(jsonValue, function (name, ival) {
            if (name == "0") return;
            console.log();
            var $input = obj.find("input[name='" + name + "']");
            if ($input.attr("type") == "radio" || $input.attr("type") == "checkbox") {
                $input.each(function () {
                    if (Object.prototype.toString.apply(ival) == '[object Array]') {
                        for (var i = 0; i < ival.length; i++) {
                            if ($(this).val() == ival[i])
                                $(this).attr("checked", "checked");
                        }
                    } else {
                        if ($(this).val() == ival)
                            $(this).attr("checked", "checked");
                    }
                });
            } else if ($input.attr("type") == "textarea") {
                obj.find("[name=" + name + "]").html(ival);
            } else {
                obj.find("[name=" + name + "]").val(ival);
            }
        });
    }

    // 初始化表格
    $table.bootstrapTable({
        url: host,
        toolbar: '#toolbar',
        clickEdit: false,
        striped: true,
        undefinedText: 'N/A',
        pagination: true,       //显示分页条
        showColumns: true,
        showRefresh: true,      //显示刷新按钮
        clickToSelect: false,   //点击row选中radio或CheckBox
        showToggle: false,      //是否显示详细视图和列表视图的切换按钮
        cardView: false,        //是否显示详细视图
        detailView: false,      //是否显示父子表
        uniqueId: 'id',
        responseHandler: (response) => {
            return response.data;
        },
        columns: [
            {
                checkbox: true
            },
            {
                field: 'id',
                visible: false
            },
            {
                field: 'equId',
                title: '设备Id'
            },
            {
                field: 'projectId',
                title: '所属项目',
                width: '250px',
                formatter: $.fn.dropdownFormat
            },
            {
                field: 'propName',
                title: '属性名称'
            },
            {
                field: 'propCode',
                title: '属性编码'
            },
            {
                field: 'propType',
                title: '数据类型',
                width: '90px',
                formatter:$.fn.dataTypeFormatter
            },
            {
                field: 'valueSet',
                title: '阈值'
            },
            {
                field: 'propUnit',
                title: '单位'
            },
            {
                field: 'valueSrc',
                title: '来源'
            },
            {
                field: 'color',
                title: '色值',
                formatter:$.fn.colorFormatter
            },
            {
                field: 'rangeMin',
                title: '区间最小值'
            },
            {
                field: 'rangeMax',
                title: '区间最大值'
            },
            {
                title: '操作',
                width: '90px',
                formatter: $.fn.buttonFormatter
            }
        ],

        onClickCell: (field, value, row, $element) => {

        }
    });
</script>
