@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    ul {
        margin-top: 20px;
    }

    .head {
        padding-left: 38px;
    }

    .head_title {
        font-size: x-large;
        font-family: sans-serif;
        margin-bottom: 15px;
    }
</style>

<div class="row">&nbsp;</div>
<div class="alert alert-danger">
    <b>* 说明：创建系统分类和系统分类与设备分类的映射关系的步骤，可参考「帮助文档」菜单下的「系统配置」页面</b>
</div>
<div class="alert alert-success">
    <div class="row">
        <div class="col-md-6">
            <label class="control-label" for="" title="">当前项目：@ViewBag.ProjectName</label>
            <div class="form-inline">
                <label class="control-label" for="" title="">复制项目配置：</label>
                <select id="disabledSelect" class="form-control" style="width:220px;">
                    <option>- 请选择 -</option>
                    <option>国贸3A</option>
                </select>
                <button class="btn btn-success">复制</button>
            </div>
        </div>
        <div class="col-md-6">
            <input type="hidden" value="@ViewBag.ProjectId" id="projectId" />
        </div>
    </div>
</div>
<div class="row">&nbsp;</div>
<div class="row">
    <div class="col-md-6">
        <div class="col-md-6">
            <div class="info head head_title">系统分类</div>
            <form class="form-inline head">
                <div class="form-group">
                    <div class="form-group">
                        <input type="text" class="form-control" id="sysConfigKeyword" placeholder="请输入系统分类">
                    </div>
                </div>
                <button type="button" id="sysConfigSearch" class="btn btn-primary">搜索</button>
                <button type="button" id="sysConfigCreate" class="btn btn-success">新建</button>
            </form>
            <ul id="config" class="ztree"></ul>
        </div>
        <div class="col-md-6">
            <div class="info head head_title">数字化移交设备分类</div>
            <form class="form-inline head">
                <div class="form-group">
                    <div class="form-group">
                        <input type="text" class="form-control" id="transfreKeyword" placeholder="请输入设备分类">
                    </div>
                </div>
                <button type="button" id="transferSearch" class="btn btn-primary">搜索</button>
                <button type="button" id="saveMap" class="btn btn-success">保存映射</button>

            </form>
            <ul id="deviceClass" class="ztree"></ul>
        </div>
    </div>
    <div class="col-md-6">
        <form class="form-horizontal center-block" role="form" id="form">
            <div class="form-group">
                <input class="form-control" id="id" name="id" type="hidden" />
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="sysCode" title="SYS_CODE">系统编码</label>
                <div class="col-md-9 ">
                    <input class="form-control" id="sysCode" name="sysCode" type="number" placeholder="请输入系统编码(SYS_CODE)" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="sysName" title="SYS_NAME">系统名称</label>
                <div class="col-md-9">
                    <input class="form-control" id="sysName" name="sysName" type="text" placeholder="请输入系统名称(SYS_NAME)" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="sysIcon" title="SYS_ICON">系统图标</label>
                <div class="col-md-9">
                    <select id="sysIcon" name="sysIcon" class="form-control">
                        <option>- 请选择 -</option>
                        <option>HVAC</option>
                        <option>electricTrans</option>
                        <option>elevator</option>
                        <option>monitor</option>
                    </select>
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="sysOrder" title="SYS_ORDER">系统排序</label>
                <div class="col-md-9">
                    <input class="form-control" id="sysOrder" name="sysOrder" type="number" placeholder="请输入顺序(SYS_ORDER)" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="parentCode" title="PARENT_CODE">父级节点</label>
                <div class="col-md-9">
                    <input class="form-control" id="parentCode" name="parentCode" type="number" placeholder="父级节点(PARENT_CODE)" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="isShow" title="IS_SHOW">是否显示</label>
                <div class="col-md-9">
                    <input type="checkbox" name="isShow" id="isShow" data-id="isShow" data-on-text="显示" data-off-text="隐藏" checked>
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="api" title="API">API</label>
                <div class="col-md-9">
                    <input class="form-control" id="api" name="api" type="text" placeholder="二级接口地址" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="iotApi" title="IOT_API">IOT数据接口</label>
                <div class="col-md-9">
                    <input class="form-control" id="iotApi" name="iotApi" type="text" placeholder="请输入IOT数据接口地址" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="uiStyle" title="UI_STYLE">UI样式</label>
                <div class="col-md-9">
                    <input class="form-control" id="uiStyle" name="uiStyle" type="text" placeholder="请输入UI样式" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="iotModelCode" title="IOT_MODEL_CODE">IOT模型编码</label>
                <div class="col-md-9">
                    <input class="form-control" id="iotModelCode" name="iotModelCode" type="text" placeholder="请输入IOT模型编码，如EAF" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="sysPic" title="SYS_PIC">系统展示图片</label>
                <div class="col-md-9">
                    <input class="form-control" id="sysPic" name="sysPic" type="file" placeholder="上传系统展示图片" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="modelStyle" title="MODEL_STYLE">启用3DMarker</label>
                <div class="col-md-9 text-left">
                    <input type="checkbox" name="modelStyle" id="modelStyle" data-id="modelStyle" data-on-text="启用" data-off-text="禁用" checked>
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="modelShowCondition" title="MODEL_SHOW_CONDITION">构件筛选条件</label>
                <div class="col-md-9">
                    <input class="form-control" id="modelShowCondition" name="modelShowCondition" type="text" placeholder='如[{"levelName":"F07"}]' />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for="sysColor" title="SYS_COLOR">系统颜色</label>
                <div class="col-md-9">
                    <input class="form-control" id="sysColor" name="sysColor" type="color" placeholder="报警数据统计颜色,如#05A3FF" />
                </div>
            </div>
            <div class="form-group ">
                <label class="col-md-3 control-label" for=""></label>
                <div class="col-md-9">
                    <input class="btn btn-success" id="save" type="button" value="保存" />
                </div>
            </div>
        </form>
    </div>
</div>


<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/layer/layer.js"></script>
<script src="~/Scripts/bootstrap-switch.min.js"></script>
<script src="~/Scripts/bootstrap-treeview.js"></script>
<link href="~/Content/bootstrapValidator.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrapValidator.min.js"></script>
<script src="~/datepicker/locales/bootstrapValidator.zh_CN.js"></script>
<script type="text/javascript">
    $("[name='isShow']").bootstrapSwitch({
        onSwitchChange: (event, state) => {
            let which = event.target.attributes['data-id'].value;
            layer.msg(which + "|" + state);
        }
    });
    $("[name='isShow']").bootstrapSwitch("state", true);
    $("[name='modelStyle']").bootstrapSwitch({
        state: true,
        onSwitchChange: (event, state) => {
            let which = event.target.attributes['data-id'].value;
            layer.msg(which + "|" + state);
        }
    });
    $("[name='modelStyle']").bootstrapSwitch("state", true);
</script>

<script type="text/javascript">
    let host = 'http://10.1.73.13:8079/api/system/config/'
    var systemConfig = @Html.Raw(ViewBag.systemConfigTree);
    var dataTransfer = @Html.Raw(ViewBag.dataTransferTree);

    $(function () {
        let $sysConfigSearch = $('#sysConfigSearch');
        let $transferSearch = $('#transferSearch');
        let $sysConfigCreate = $('#sysConfigCreate');
        let $sysConfigKeyword = $('#sysConfigKeyword');
        let $transfreKeyword = $('#transfreKeyword');
        let $isShow = $("[name='isShow']");
        let $modelStyle = $("[name='modelStyle']");
        let $deviceClass = $('#deviceClass');
        let $config = $('#config');
        let $saveMap = $('#saveMap');
        let $save = $('#save');
        let $clickEvent = 'click';
        let $projectId = $('#projectId');

        let $$checked = [];

        let lastSelectedNodeId = null;
        let lastSelectTime = null;

        // 初始化树结构
        $.fn.initBootstrapTreeView = () => {
            $config.treeview({
                showBorder: false,
                data: systemConfig,
                onNodeSelected: (event, node) => {
                    $("input[name='parentCode']").attr('readonly',false);
                    // 单击系统分类时，将数据带给表单
                    let config = node.tags;
                    for (property in config) {
                        console.log(property + ":" + config[property]);
                        // 是否显示
                        if (property === 'isShow') {
                            let isShowVal = config[property] === 1 ? true : false;
                            $('input[name="isShow"]').bootstrapSwitch("state", isShowVal, false);
                            continue;
                        }
                        // 系统图片
                        if (property === 'sysPic') {
                            continue;
                        }
                        // 启用Marker
                        if (property === 'modelStyle') {
                            let modelStyleVal = config[property] === 1 ? true : false;
                            $('input[name="modelStyle"]').bootstrapSwitch("state", modelStyleVal, false);
                            continue;
                        }

                        $("[name='" + property + "']").val(config[property]);
                    }
                }
            });
            $config.treeview('collapseAll', { silent: true });
            $deviceClass.treeview({
                showCheckbox: true,
                showBorder: false,
                selectable: false,
                data: dataTransfer,
                onNodeChecked: (event, node) => {
                    console.log(node);
                    layer.msg(node.id);
                }
            });
            $deviceClass.treeview('collapseAll', { silent: true });
            $.fn.validateForm();
            $.fn.bindEvent();
        };

        // TreeView搜索
        $.fn.searchTree = ($selector,$tree) => {
            if (!$selector) return;
            let pattern = $selector.val();
            let results = $tree.treeview('search', pattern);
        }

        // 保存系统配置和设备分类映射关系
        $.fn.saveMap = () => {
            if ($.fn.validateTree()) {

                // 准备数据
                let projectId = $projectId.val();
                let sysCode = $config.treeview('getSelected')[0].code;
                let equTypeIdList = $deviceClass.treeview('getChecked');
                let referData = [];

                for (let i = 0; i < equTypeIdList.length; i++) {
                    let item = { projectId: Number(projectId), sysCode: sysCode, equTypeId: equTypeIdList[i].id };
                    referData.push(item);
                }
                console.log(JSON.stringify(referData));

                let options = {
                    url: host + "createBatchReference",
                    data: JSON.stringify(referData),
                    type: 'POST',
                    contentType: 'application/json',
                    success: (response) => {
                        if (response.code === 20000) {
                            layer.msg("映射关系保存成功！", { icon: 1 }, () => {
                                window.location.reload(true);
                            });
                        } else {
                            layer.msg(response.message);
                        }
                    }
                };
                $.ajax(options);
            }
        }

        // 创建系统配置
        $.fn.createSystemConfig = () => {
            // 获取当前选中的节点，如果没有，则是建立根节点
            let selected = $config.treeview('getSelected');
            selected.length === 0 ? $.fn.setParentCode('', true) : $.fn.setParentCode(selected[0].code, false);
        }

        // 新建时把节点Code带给表单
        $.fn.setParentCode = (data, root) => {
            // 清除表单
            document.getElementById("form").reset();
            let $parentCode = $("input[name='parentCode']");
            if (!root) {
                // 父节点编码赋值
                $parentCode.attr("readonly", true);
                $parentCode.val(data);
            }
        }

        // 验证树数据是否合法
        $.fn.validateTree = () => {
            //TODO:验证树数据是否符合入库条件

            // 获取被选中的节点集合
            let selected = $config.treeview('getSelected');

            // 获取被勾选的集合
            let checked = $deviceClass.treeview('getChecked');

            if (!selected.length || !checked.length) {
                layer.msg('尚未选择[设备分类]或[系统分类]！', { icon: 5 });
                return false;
            }

            // 将末级节点存入数组
            $$checked = [];
            for (let i = 0, len = checked.length; i < len; i++) {
                if (checked[i].nodes.length == 0) {
                    $$checked.push(checked[i].id);
                }
            }
            $.fn.c($$checked);
            let _device = $$checked.length;
            if (!_device) {
                layer.msg('请勾选设备分类的末级节点');
                return false;
            }

            // 系统分类
            //if (selected.nodes.length) {
            //    layer.msg('请选择系统分类');
            //    return false;
            //}
            return true;
        }

        // 模拟节点双击事件
        $.fn.clickNode = (event, data) => {
            if (lastSelectedNodeId && lastSelectTime) {
                let time = new Date().getTime();
                let t = time - lastSelectTime;
                if (lastSelectedNodeId == data.nodeId && t < 600) {
                    $.fn.setParentCode(data);
                }
            }
            lastSelectedNodeId = data.nodeId;
            lastSelectTime = new Date().getTime();
        }

        $.fn.dbClickEvent = () => {
            //节点选中时触发
            $config.on('nodeSelected', function (event, data) {
                $.fn.clickNode(event, data)
                console.log(data);
            });
            //节点取消选中时触发
            $config.on('nodeUnselected', function (event, data) {
                $.fn.clickNode(event, data)
            });
        }

        // 保存数据
        $.fn.save = () => {
            let bootstrapValidator = $("#form").data('bootstrapValidator');
            bootstrapValidator.validate();
            if (bootstrapValidator.isValid()) {
                // 准备表单数据
                let formData = $('#form').serializeArray();
                let _config = {};
                for (let i = 0; i < formData.length; i++) {
                    _config[formData[i].name] = formData[i].value;
                }

                // 处理数据
                _config.id = Number(_config.id);
                _config.sysOrder = Number(_config.sysOrder);
                _config.isShow = $isShow.bootstrapSwitch('state') === true ? 1 : 0;
                _config.modelStyle = $modelStyle.bootstrapSwitch('state') === true ? 1 : 0;
                console.log(_config);

                // 提交数据

            }
        }

        // 事件绑定
        $.fn.bindEvent = () => {
            $sysConfigSearch.bind($clickEvent, () => { $.fn.searchTree($sysConfigKeyword, $config) });
            $transferSearch.bind($clickEvent, () => { $.fn.searchTree($transfreKeyword, $deviceClass) });
            $sysConfigCreate.bind($clickEvent, () => { $.fn.createSystemConfig() });
            $save.bind($clickEvent, () => { $.fn.save()});
            $saveMap.bind($clickEvent, () => { $.fn.saveMap(); });
            //$.fn.dbClickEvent();
        }

        // 系统配置表单验证
        $.fn.validateForm = () => {
            $('#form').bootstrapValidator({
                message: 'This value is not valid',
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    sysCode: {
                        message: '系统编码验证失败',
                        validators: {
                            notEmpty: {
                                message: '系统编码不能为空'
                            }
                        }
                    },
                    sysName: {
                        validators: {
                            notEmpty: {
                                message: '系统名称不能为空'
                            }
                        }
                    }
                }
            })
        }
        
        // 执行初始化
        $.fn.initBootstrapTreeView();

        $.fn.c = (args) => {
            console.log(args);
        };
    });

</script>
